version: '3.8'

services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - zookeeper


  file_manager:
    build:
      context: .
      dockerfile: file_manager/Dockerfile
    container_name: file-manager
    working_dir: /app
    volumes:
      - ./file_manager:/app/file_manager
      - ./kafka_common:/app/kafka_common
      - ./grpc:/app/grpc
      - ../../scripts:/app/scripts
    environment:
      - PYTHONPATH=/app/file_manager:/app/file_manager/grpc_internal
    ports:
      - "8001:8001"
    depends_on:
      - kafka

  create_testcase:
    build:
      context: .
      dockerfile: create_testcase/Dockerfile
    container_name: create-testcase
    working_dir: /app
    volumes:
      - ./create_testcase:/app/create_testcase
      - ./kafka_common:/app/kafka_common
      - ./grpc:/app/grpc
    environment:
      - PYTHONPATH=/app/create_testcase:/app/create_testcase/grpc_internal
    ports:
      - "8000:8000"
    depends_on:
      - kafka

  code-runner:
    build:
      context: .
      dockerfile: code_runner/Dockerfile
    container_name: code_runner
    working_dir: /app
    volumes:
      - ./code_runner:/app/code_runner
      - ./kafka_common:/app/kafka_common
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grpc:/app/grpc
    environment:
      - PYTHONPATH=/app/code_runner:/app/code_runner/grpc_internal
    ports:
      - "8002:8002"
    depends_on:
      - kafka

  auth:
    build:
      context: .
      dockerfile: auth/Dockerfile
    container_name: auth
    restart: always
    env_file:
      - ./auth/.env
    ports:
      - "8004:8004"
    depends_on:
      - auth-db

  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    env_file:
      - ./auth/.env
    ports:
      - "5432:5432"
    volumes:
      - ./auth-db-volume:/var/lib/postgresql/data

  orchestrator:
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    container_name: orchestrator
    working_dir: /app
    volumes:
      - ./orchestrator:/app/orchestrator
      - ./grpc:/app/grpc
    environment:
      - PYTHONPATH=/app/orchestrator:/app/orchestrator/grpc_internal
    ports:
      - "8003:8003"
